From d22619d31f236ab8a580b1e61b08851f7b802fe4 Mon Sep 17 00:00:00 2001
From: David Scott <dave.scott@docker.com>
Date: Sat, 25 Jan 2020 09:57:27 +0000
Subject: [PATCH 34/34] fuse: always invalidate files in dcache

We skip directories to prevent the problem when the directory is the
current directory of some process.

Signed-off-by: David Scott <dave.scott@docker.com>
---
 fs/fuse/dir.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/fs/fuse/dir.c b/fs/fuse/dir.c
index 733e662..71c7c70 100644
--- a/fs/fuse/dir.c
+++ b/fs/fuse/dir.c
@@ -985,9 +985,12 @@ int fuse_reverse_inval_entry(struct super_block *sb, u64 parent_nodeid,
 		goto unlock;
 
 	fuse_dir_changed(parent);
-	printk("fuse_invalidate_entry skipping d_invalidate for %s\n", name->name);
-	fuse_invalidate_entry_cache(entry);
-
+	if (d_is_dir(entry)) {
+		printk("fuse_invalidate_entry skipping d_invalidate for %s\n", name->name);
+		fuse_invalidate_entry_cache(entry);
+	} else {
+		fuse_invalidate_entry(entry);
+	}
 	if (child_nodeid != 0 && d_really_is_positive(entry)) {
 		inode_lock(d_inode(entry));
 		if (get_node_id(d_inode(entry)) != child_nodeid) {
-- 
2.7.4

